---
title: "STATS506-HW2-JunjieZeng"
author: "JunjieZeng"
format: html
editor: visual
---

# STATS506 Problem Set #2

## Repository
https://github.com/JunjieZeng1/STATS-506.git

## Problem 1 Dice Game

### a
Version 1
```{r}
#' Function to simulate dice game using a loop
#'
#' @param x a numeric number, the number of dice to roll
#' @return Total winnings
play_dice_loop <- function(x){
  net_win = 0
  roll <- sample(c(1:6), size = 1)
  for (i in 1:x){
    if (roll %in% c(3, 5)){
      net_win = net_3in + 2 * roll - 2
    }
    else{
      net_win = net_win - 2
    }
  }
  return(net_win)
}
```

Version2
```{r}
#' Function to simulate dice game using built-in R vectorized functions
#'
#' @param x a numeric number, the number of dice to roll
#' @return Total winnings
play_dice_vec <- function(x){
  roll <- sample(c(1:6), x, replace = TRUE)
  games <- ifelse(roll %in% c(3, 5), roll * 2 - 2 , -2)
  net_win = sum(games)
  return(net_win)
}
```

Version3
```{r}
#' Function to simulate dice game using table()
#'
#' @param x a numeric number, the number of dice to roll
#' @return Total winnings
play_dice_tb <- function(x){
  net_win = 0
  roll <- sample(c(1:6), x, replace = TRUE)
  table_roll <- table(roll)
  if ("3" %in% names(table_roll)){
    num_3 = as.integer(table_roll["3"])
    net_win = net_win +  2 * 3 * num_3
  }
  
  if ("5" %in% names(table_roll)){
    num_5 = as.integer(table_roll["5"])
    net_win = net_win +  2 * 5 * num_5
  }
  
  net_win = net_win - 2 * x
  
  return(net_win)
}
```

Version4
```{r}
#' Function to simulate dice game using 
#'
#' @param x a numeric number, the number of dice to roll
#' @return Total winnings
#' 

```