---
title: "STATS506-HW4-JunjieZeng"
author: "JunjieZeng"
format: 
  html:
    embed-resources: true
editor: visual
---
 
# STATS506 Problem Set #4

## Repository

https://github.com/JunjieZeng1/STATS-506.git

## Problem 1 - Tidyverse

```{r, warning=FALSE}
# Libraries
library(tidyverse)
library(dplyr)
library(nycflights13)
```

```{r}
# Load data
head(flights)

flights |> 
  group_by(origin) |> 
  summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE), 
            median_dep_delay = median(dep_delay, na.rm = TRUE)) |> 
  select(airport = origin, avg_dep_delay, median_dep_delay) |> 
  arrange(-avg_dep_delay) 


flights |> 
    group_by(dest) |> 
    filter(n() >= 10) |> 
    summarize(avg_arr_delay = mean(arr_delay, na.rm = TRUE), 
              median_arr_delay = median(arr_delay, na.rm = TRUE)) |> 
    select(airport = dest, avg_arr_delay, median_arr_delay) |> 
    arrange(-avg_arr_delay) 
```

```{r}
head(planes)

flights |> 
  inner_join(planes, by = "tailnum") |> 
  mutate(speed_flights = distance / (air_time / 60)) |> 
  group_by(model) |> 
  summarize(avg_speed = mean(speed_flights, na.rm = TRUE), 
         total_flights = n()) |> 
  arrange(-avg_speed) |> 
  slice(1)
```

## Problem 2 - get_temp()

```{r}
# Load data
nnmaps <- read.csv("/Users/junjiezeng/Desktop/git/STATS506/HW4/chicago-nmmaps.csv")
```


```{r}
##' @title Get the average temperature for a given month
##' @param month Month, either a numeric 1-12 or a string
##' @param year A numeric year
##' @param data The data set to obtain data from
##' @param celsius Logically indicating whther the results should be in celsius. Default FALSE.
##' @param average_fn A function with which to compute the mean. Default is mean.
##' @return The average temperature for a given month, a numeric vector of length 1
get_temp <- function(month, year, data, celsius=FALSE, average_fn=mean){
  colnames(data) <- c("city", "date", "temp", "o3", "dewpoint", "pm10", 
                     "season", "yday", "monthh", "month_numeric", "yearr")
  
  # Check average_fn should be a function
  if (!(average_fn |>  is.function())) {
      stop("average_fn should be a function")
  }
  
  # Check year for nuemric
  if (!(year |>  is.numeric())) {
      stop("Year should be numeric")
  }
  
  # Check the range
  if (year < min(data$yearr) | year > max(data$yearr)) {
      stop("Year out of range")
  }
  
  # Check the month input
  # Check for numeric
  if (month |> is.numeric()){
    # Check for proper range
    if(month > 12 | month < 1){
      stop("Month out of range")
    }
    # Check for integer
    if(floor(month) != month){
      stop("Invalid month")
    }
  }
  # Check for string
  else if (month |> is.character()){
    if (!(month %in% c("January", "February", "March", "April", "May", "June", "July",
                      "August", "September", "October", "November", "December"))){
      if(!(month %in% c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                      "Aug", "Sep", "Oct", "Nov", "Dec"))){
        stop("Invalid month name")
      }
    }
  }
  # Raise error if not valid
  else{
    stop("Month should be either a numeric value or a month name")
  }
  
  data |> 
    select(yearr, monthh, month_numeric, temp) |> 
    filter(yearr == year, 
           monthh == month | month_numeric == month | monthh == substring(month, 1, 3)) |> 
    summarize(avg_temp = average_fn(temp)) |> 
    mutate(avg_temp = ifelse(celsius, (avg_temp - 32) * (5 / 9), avg_temp)) |> 
    slice(1) |> 
    pull(avg_temp) -> output
  
  return(output)
}
```

```{r, error=TRUE}
get_temp("Apr", 1999, data = nnmaps)
get_temp("Apr", 1999, data = nnmaps, celsius = TRUE)
get_temp(10, 1998, data = nnmaps, average_fn = median)
get_temp(13, 1998, data = nnmaps)
get_temp(2, 2005, data = nnmaps)
get_temp("November", 1999, data =nnmaps, celsius = TRUE,
         average_fn = function(x) {
           x %>% sort -> x
           x[2:(length(x) - 1)] %>% mean %>% return
         })
```

## Problem 3
### a
```{r}
library(ggplot2)
```
```{r}
# Load data
art_sales <- read.csv("/Users/junjiezeng/Desktop/git/STATS506/HW4/df_for_ml_improved_new_market.csv")
```

```{r}
art_sales |> 
  select(year, price_usd) |> 
  group_by(year) |> 
  summarize(mean_price = mean(price_usd)) |> 
  ggplot(aes(x = year, y = mean_price)) +
  geom_line(color = 'royalblue', linewidth = 1.2) +
  geom_point(size = 2) + 
  labs(title = "Average Sales Price Over Time",
       x = "Year", 
       y = "Average Sales Price (USD)") +
  scale_x_continuous(breaks = seq(min(art_sales$year), max(art_sales$year), by = 2)) +
  scale_y_continuous(breaks = seq(0, 50000, by = 5000),
       labels = scales::comma_format(scale = 1)) + 
  theme_minimal()
```
From the graph of average sales price over time, we see an increasing trend in sales price from 1997 to 2008. The sale price peaked at 2008, and started to decrease.     


### b
```{r}
art_sales |> 
  mutate(Genre = case_when(
    Genre___Print == 1 ~ "Print", 
    Genre___Photography == 1 ~ "Photography", 
    Genre___Painting == 1 ~ "Painting",
    Genre___Sculpture == 1 ~ "Sculpture",
    Genre___Others == 1 ~ "Others"
  )) |> 
  group_by(year, Genre) |> 
  summarize(total_sales = sum(price_usd)) |> 
  ggplot(aes(x = year, y= total_sales, fill = Genre)) +
  geom_bar(stat = "identity", position = "fill") +
  labs(title = "Average Sales Price Over Time",
       x = "Year", 
       y = "Average Sales Price (USD)") +
  scale_x_continuous(breaks = seq(min(art_sales$year), max(art_sales$year), by = 2)) +
  theme_minimal()
```
From the plot above, we can see that the distribution of genre of sales across years appear to change. It is more marked before 2002. Before 2002, there's a decrease trend of painting and an increase in photography. After 2002, the distribution fluctuates every year but there's no prominant change in distributions.    


### c
```{r}
art_sales |>
  mutate(Genre = case_when(
    Genre___Print == 1 ~ "Print",
    Genre___Photography == 1 ~ "Photography",
    Genre___Painting == 1 ~ "Painting",
    Genre___Sculpture == 1 ~ "Sculpture",
    Genre___Others == 1 ~ "Others"
  )) |>
  group_by(year, Genre) |>  # Group by both year and Genre
  summarize(mean_price = mean(price_usd)) |>  # Calculate mean price by both year and Genre
  ungroup() |> 
  ggplot(aes(x = year, y = mean_price, color = Genre, group = Genre)) + 
  geom_line(linewidth = 1.2) +
  geom_point(size = 2) + 
  labs(title = "Average Sales Price Over Time",
       x = "Year", 
       y = "Average Sales Price (USD)") +
  scale_x_continuous(breaks = seq(min(art_sales$year), max(art_sales$year), by = 2)) +
  scale_y_continuous(breaks = seq(0, 50000, by = 5000),
       labels = scales::comma_format(scale = 1)) + 
  theme_minimal()
```

We see there's increasing trend for every genre except others over time. The extant of increase are different. Photography skyrocketed in 2006 and has the most steep trend of increase among all genres. Print increased but vacillated a lot. Painting and sculpture increased relatively steadily. The sales price for sculpture, however, decreased between 2008 and 2012.    
