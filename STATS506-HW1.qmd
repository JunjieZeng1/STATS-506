---
title: "STATS506-HW1-JunjieZeng"
author: "Junjie Zeng"
format: html
editor: visual
---

# STATS506 Problem Set #1

## Problem 1 - Wine Data

### 1.a

```{r}
# Loading data
dfwine <- read.table("/Users/junjiezeng/Desktop/wine/wine.data", sep = ",")
```

```{r}
# Change column names
names(dfwine) <- c("class", "Alcohol", "Malicacid", "Ash", "Alcalinity_of_ash", "Magnesium", "Total_phenols", "Flavanoids", "Nonflavanoid_phenols", "Proanthocyanins","Color_intensity", "Hue", "OD280_OD315_of_diluted_wines", "Proline")
head(dfwine)
```

### 1.b

The number of wines within each class indeed matches the numbers reported in "wine.names", which are 59, 71, and 48 respectively.

```{r}
# Create new dataframes for different classes
dfwine1 <- dfwine[dfwine$class == 1, ]
dfwine2 <- dfwine[dfwine$class == 2, ]
dfwine3 <- dfwine[dfwine$class == 3, ]
```

```{r}
# Check the number of wines within each class
nrow(dfwine1)
nrow(dfwine2)
nrow(dfwine3)
```

### 1.c

#### 1.c.1

The correlation between alcohol content and color intensity is `cor(dfwine$Alcohol, dfwine$Color_intensity)`

```{r}
# Compute the correlation of alcohol vs color intensity
cor(dfwine$Alcohol, dfwine$Color_intensity)
```

#### 1.c.2

Class 1 has the highest correlation, which is 0.4082913. Class 2 has the lowest correlation, which is 0.2697891.

```{r}
# Compute correlation above for different classes
cor1 <- cor(dfwine1$Alcohol, dfwine1$Color_intensity)
cor2 <- cor(dfwine2$Alcohol, dfwine2$Color_intensity)
cor3 <- cor(dfwine3$Alcohol, dfwine3$Color_intensity)
cor1
cor2
cor3
```

```{r}
# Find the highest and lowest correlation
cors <- c(cor1, cor2, cor3)
max(cors)
min(cors)
```

#### 1.c.3

The alcohol content of the wine with the highest color intensity is 14.34.

```{r}
dfwine[dfwine$Color_intensity == max(dfwine$Color_intensity),]$Alcohol
```

#### 1.c.4
About 8.43 percent of wines had a higher content of proanthocyanins compare to ash. 
```{r}
# Computing percentage
nrow(dfwine[dfwine$Proanthocyanins - dfwine$Ash > 0,]) / nrow(dfwine)
```





## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
